version: "3"

services:
  prod-api: # The web10 API, that holds all the data.
    build: api
    ports:
      - "10001:80"
    environment:
      - VIRTUAL_HOST=api.web10.app
      - INFISICAL
      - PROVIDER=api.web10.app
      - DB=deploy
      - STRIPE_STATUS=live
    networks:
      - all-spark-proxy
    restart: always
    deploy:   
      resources:
        reservations:
          memory: 256M
  prod-auth: # The web10 Authenticator, the UI for managing the web10 API
    build: 
      context: .
      dockerfile: auth/Dockerfile
      target: deploy
    environment:
      PORT: 80
      VIRTUAL_HOST: auth.web10.app
      CHOKIDAR_USEPOLLING: "true"
      REACT_APP_DEFAULT_API: api.web10.app
      REACT_APP_VERIFY_REQURED: "true"
      REACT_APP_PAY_REQUIRED: "true"
    ports:
      - '10002:80'
    restart: always
    deploy:   
      resources:
        reservations:
          memory: 256M
    networks:
      - all-spark-proxy
  prod-rtc: # web10 RTC, responsible for webRTC P2P connections on web10.
    build: rtc
    environment:
      PORT: 80
      VIRTUAL_HOST: rtc.web10.app
      CHOKIDAR_USEPOLLING: "true"
    ports:
      - '10003:80'
    restart: always
    deploy:   
      resources:
        reservations:
          memory: 256M
    networks:
      - all-spark-proxy
  prod-crm: # web10 CRM, a demo app on web10 to check core functionality / data management is working.
    build: 
      context: .
      dockerfile: crm/Dockerfile
    ports:
      - "10004:80"
    environment:
      VIRTUAL_HOST: crm.web10.app
    restart: always
    deploy:   
      resources:
        reservations:
          memory: 256M
    networks:
      - all-spark-proxy
  prod-docs: # web10 docs, the web10 documentation on how to use it as a developer
    build: sdk 
    ports:
      - "10005:80"
    environment:
      VIRTUAL_HOST: docs.web10.app
    restart: always
    deploy:   
      resources:
        reservations:
          memory: 256M
    networks:
      - all-spark-proxy
  prod-home: # web10 home, the homepage that explains the mission + about web10.
    build: home 
    ports:
      - "10006:80"
    environment:
      VIRTUAL_HOST: web10.app
    restart: always
    deploy:   
      resources:
        reservations:
          memory: 256M
    networks:
      - all-spark-proxy
  prod-mail: # web10 mail, a demo app on web10 to check webRTC + cross communication is working.
    build: 
      context: .
      dockerfile: mail/Dockerfile
    ports:
      - "10007:80"
    environment:
      VIRTUAL_HOST: mail.web10.app
    restart: always
    deploy:   
      resources:
        reservations:
          memory: 256M
    networks:
      - all-spark-proxy
 
networks:
  all-spark-proxy:
    external: true
