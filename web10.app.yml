version: "3"

services:
  api: # The web10 API, that holds all the data.
    build: api
    volumes:
      - ./api/:/web10 
    ports:
      - "10001:80"
    environment:
      - VIRTUAL_HOST=api.web10.app
      - INFISICAL
      - PROVIDER=api.web10.app
      - DB=deploy
      - STRIPE_STATUS=live
    networks:
      all-spark-proxy:
        external: true
      default:
        aliases:
          - api.web10.app
    restart: always
  auth: # The web10 Authenticator, the UI for managing the web10 API
    build: 
      context: .
      dockerfile: auth/Dockerfile
      target: deploy
    environment:
      PORT: 80
      VIRTUAL_HOST: auth.web10.app
      CHOKIDAR_USEPOLLING: "true"
      REACT_APP_DEFAULT_API: api.web10.app
      REACT_APP_VERIFY_REQURED: "true"
      REACT_APP_PAY_REQUIRED: "true"
    ports:
      - '10002:80'
    restart: always
    networks:
      - all-spark-proxy
  rtc: # web10 RTC, responsible for webRTC P2P connections on web10.
    build: rtc
    volumes:
      - ./rtc:/rtc
      - rtc:/rtc/node_modules
    environment:
      PORT: 80
      VIRTUAL_HOST: rtc.web10.app
      CHOKIDAR_USEPOLLING: "true"
    ports:
      - '10003:80'
    restart: always
    networks:
      - all-spark-proxy
  crm: # web10 CRM, a demo app on web10 to check core functionality / data management is working.
    build: 
      context: .
      dockerfile: crm/Dockerfile
    volumes:
      - ./crm/:/crm/public
      - ./sdk/:/crm/public/sdk    
    ports:
      - "10004:80"
    environment:
      VIRTUAL_HOST: crm.web10.app

networks:
  all-spark-proxy:
    external: true
