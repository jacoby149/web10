version: "3"

services:
  api: # The web10 API, that holds all the data.
    build: api
    volumes:
      - ./api/:/web10 
    ports:
      - "6000:80"
    environment:
      - VIRTUAL_HOST=api.localhost
      - INFISICAL
    command: ["sleep","infinity"] # ["pipenv", "run", "uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "80", "--reload"]
    networks:
      default:
        aliases:
          - api.localhost
  auth: # The web10 Authenticator, the UI for managing the web10 API
    build: 
      context: .
      dockerfile: auth/Dockerfile
      target: dev
    volumes:
      - ./auth:/auth
      - ./sdk:/auth/public/sdk
      - node-modules:/auth/node_modules
      - wapi-node-modules:/auth/public/sdk/node_modules
    command: ["npm", "run", "start"]
    environment:
      PORT: 80
      VIRTUAL_HOST: auth.localhost
      CHOKIDAR_USEPOLLING: "true"
    ports:
      - '3000:80'
  rtc: # web10 RTC, responsible for webRTC P2P connections on web10.
    build: rtc
    volumes:
      - ./rtc:/rtc
      - rtc:/rtc/node_modules
    command: ["nodemon", "index.js"]
    environment:
      PORT: 80
      VIRTUAL_HOST: rtc.localhost
      CHOKIDAR_USEPOLLING: "true"
    ports:
      - '6363:80'
  docs: # web10 docs, the web10 documentation on how to use it as a developer
    build: sdk 
    volumes:
      - ./sdk/:/docs/public
    ports:
      - "6969:80"
    environment:
      VIRTUAL_HOST: docs.localhost
  home: # web10 home, the homepage that explains the mission + about web10.
    build: home 
    volumes:
      - ./home/:/home/public
    ports:
      - "6868:80"
    environment:
      VIRTUAL_HOST: home.localhost
  mail: # web10 mail, a demo app on web10 to check webRTC + cross communication is working.
    build: 
      context: .
      dockerfile: mail/Dockerfile
    volumes:
      - ./mail/:/mail/public
      - ./sdk/:/mail/public/sdk    
    ports:
      - "7171:80"
    environment:
      VIRTUAL_HOST: mail.localhost
  crm: # web10 CRM, a demo app on web10 to check core functionality / data management is working.
    build: 
      context: .
      dockerfile: crm/Dockerfile
    volumes:
      - ./crm/:/crm/public
      - ./sdk/:/crm/public/sdk    
    ports:
      - "7746:80"
    environment:
      VIRTUAL_HOST: crm.localhost
  nginx-proxy: # A reverse proxy to give all the containers easy names.
    image: jwilder/nginx-proxy
    ports:
      - "80:80"
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro

volumes:
  node-modules:
  wapi-node-modules:  
  rtc: 
