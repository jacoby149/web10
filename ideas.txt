web10 log of calls / charges / errors per user
service whitelist configurable credit limits (requester,period)
    - by requester type [web10 user or ip]
    - regex kind of expression
web10 backend service for automatic whitelist blacklist management for anti spam

Documentation discussion of data policies 
(1V1) sender vs. reciever [Modifiability vs. Immutability]
(Modification) slate vs. playground [Soloist vs. Chorus] 
(Read) limited vs. universal [Colloseum tiered seating vs. Library sit where you want]

fix skaffold dev sync inference
Fix off by a few pixels height react
Fix mobile address bar wiggle
Address Per Record Privacy
debug cross web10 requests

shouldnt be able to rename services from backend
service editor ui don't allow addition of already existing fields
make the web10 key a notification button [for verify,smrs,log in]
meter reads and writes!!! and updates!! to exact file sizes
dont allow aggregation queries
Document auth portal / service editor.
document that only true values are read on whitelists and blacklists
document that "all" overrides

/per service usage statistics

whitelist credit limiting
web10 gridFS file storage

reactnative fs storage [persists after uninstall?]

connecting user to user makes sense
but that means there are user squared possible connections which would be really expensive.
what if services had connections that many users connected to instead of just one to one connection
how can there be reasonable pools to connect to with access control?
a large group of people connected to webrtc but with access monitored.
i.e. what if someone were to be banned from the network?
what if a service relies on pools of webrtc to operate rather than just one to one

one to one is legitimately feasible, so focus on one to one rather than worry.

encryptor connections are inbound ONLY
    - why would encryptor hit up the user first?
    - user needs encryptor to encrypt
    - encryptor doesn't need user
User connections are both ways
    - if a user has multiple apps open, how to handle?

allow devs to put a type on connections for multi device scenarios

web10 subservices are developer manageable stricter services within a service w/o SMRs

make web10 user service backend access keys [ for apis ]
make python and nodeJS docs for backend hookup

diffie helman encryption

web10 mediaconnections
navigator.mediaDevices.getUserMedia({video:true,audio:true})


peerjs certify with remote provider flow

make a webRTC connections robust first person shooter game with web10RTC

implement SCR $addtoset
implement SCR $set
implement SCR $unset / $pull


web10 doesn't allow for rigorous admin gatekeeping ..
it allows for consentual gatekeeping
web10 moderator : a service that allows for centralized moderation.
charged evenly across the web10 accounts using it.

integrate service import data functionality

blotch out login button until SMRs are approved
make the approve service button send you back to login page
phone number add ? why we take numbers

features :
web10 auth
web10 devPay
web10 services

web10 encryption
web10 highjacking
web10 subservices

web10 PBFT 
web10 ledger
web10 coin
web10 reduce [distributed compute framework]

i implemented a hacky way to let devs highjack.

web10 vs. blockchain
blockchain is really good at one thing.
it is really good at public and permanent.
if you want to make a piece of data and put it out their forever.
blockchain is NOT a technological miracle band aid that will solve every world problem.
web10 is the centralized backbone to the decentralized internet.
web10 provides products to enable decentralized social experiences :
    - User owned cloud products [ databases, APIs ]
    - User first consent mechanisms
    - Highly efficient web10 secured peer to peer communication. [ accelerating social experiences in 3D virtual spaces ]
    - Whatsapp & Signal level encryption available accross all apps.
users own the cloud products on web10
users can hold their data privately, and temporarily ( they have the power to delete their internet footprint )
users can make digital representations of themselves [avatars, etc.]
users can carry them accross apps with no gatekeepers.
users can carry their social media usage and network graphs across apps too.

web10 - an internet enzyme
independent developers design new experiences for users without overcoming corporate MOATs.
they profit through monetizing access to experiences rather than user data.
users experience these new experiences by accepting developer requests.

web10 - a melting pot
users can assemble an experience they want from multiple web10 apps working off the same data
devs can assemble a user base from connecting unlikely data sources in attractive ways.

web10 provides user authority. computing, that provides full user authority.

web10 provides 
web10 provides products that allow users to achieve public and permanent, 
but also private and temporary on the internet.

api set default subservice to ""
api subservice update endpoint
wapi update subservice function
web10 moneteized python business api example
document subservices
default insecure pre configured services

subservice 
- add a subservice, 
posts/weightlifting
I am contemplating, should subservices even be a thing.
The idea, is when you load your posts, should it pull up posts at the private level too.
OR, should their be modifiable services.
subservices? That means every service can be treated as many modifiable services.

I want to be able to have institutions customize their app store logos.
So I had to add it to the auth2 config.

What if I want to run not in a bunch of docker containers?
What if I want the authenticator + app store on Netlify???
The answer is a netlify.toml

To have a CLI or to not have a CLI, that is the question.
A CLI is kind of unnecessary. Better to have downloadable projects.
    - https://download-directory.github.io/
    Maybe rely on this...

Registration must not be automatic in the long haul, it should be manual.

I need a web10 wordpress theme bundled with a web10 plugin.